package com.example.aismael.android_education_tutorial

import groovy.transform.CompileStatic
//import groovy.util.slurpersupport.GPathResult


import java.lang.reflect.Field


@CompileStatic
abstract class AbstractLocator implements ILocator {
	
	String base
	
	def parameters
	
	AbstractLocator(base, parameters) {
		this.base = base
		this.parameters = parameters
	}
	
	Location[] find(query) {
	}
	
	//protected GPathResult search(String query) {
	//	def params = this.parameters.collect {k,v -> "$k=$v"}.join('&')
	//	def binding = new Binding(q:query)
	//	def url = new GroovyShell(binding).evaluate('"' + this.base + '"');
	//	url = "$url&$params"
	//	println url
	//	new XmlSlurper().parse(url)
	//}
	
	protected String serializeLocation(Location location) {
		location.class.declaredFields
			// get all declared fields, not generated by groovy
			.findAll { !it.synthetic && it.name != 'longitude' && it.name != 'latitude'}
			// collect field values for given location instance
			.collect { Field f -> location[f.name] }
			// strip null values
			.grep { it != null }
			// encode
			.collect{ URLEncoder.encode(String.valueOf(it),'UTF-8') }
			// join with comma
			.join(',')
	}
	
}
